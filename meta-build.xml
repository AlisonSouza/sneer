<?xml version="1.0"?>
<project name="sneer meta build" default="test">
	
	<property name="build.dir" value="build" />
	
	<target name="test" depends="test.execution, test.verification">
	</target>
	
	<target name="test.verification" if="junit.failures">
		<fail>Test failures! Check the output for details.</fail>
	</target>
		
	<target name="test.execution" depends="build">
		<junit printsummary="true" failureproperty="junit.failures" fork="yes">
			<classpath>
				<fileset dir=".">
					<include name="**/lib/**/*.jar" />
				</fileset>
				<pathelement location="${build.dir}" />
				
				<!-- resource files required by tests -->
				<pathelement location="meta/src" />
				<pathelement location="wheel/src" />
			</classpath>
			
			<batchtest todir="${build.dir}">
				<fileset dir="${build.dir}">
					<include name="**/tests/*Test.class" />
				</fileset>
				<fileset dir="tests/src">
					<include name="**/*Test.java" />
				</fileset>
				<formatter type="plain"/>
			</batchtest>
		</junit>
	</target>
	
	<target name="clean">
		<delete dir="${build.dir}"/>
	</target>
	
	<target name="build" depends="clean, build.xml.generation">
		<ant antfile="build.xml" />
	</target>
	
	
	
	<taskdef resource="cloverlib.xml" classpath="clover.jar"/>
	<target name="init-clover">
		<clover-setup initString="mycoverage.db"/>
	</target>
	
	<target name="clover-report" depends="init-clover, test.execution">
		<clover-report>
	       <current outfile="clover.xml">
	          <format type="xml"/>
	       </current>
	    </clover-report>
		<clover-report>
	       <current outfile="clover">
	          <format type="html"/>
	       </current>
	    </clover-report>
	</target>
	
	<target name="build.xml.generation" depends="init">
		
		<path id="wheel.lib.classpath">
			<fileset dir="wheel/lib">
				<include name="**/*.jar" />
			</fileset>
			<fileset dir="meta/lib">
				<include name="**/*.jar" />
			</fileset>
		</path>
		
		<javac destdir="${build.dir}"
			classpathref="wheel.lib.classpath"
			listfiles="true"
			failonerror="true"
			debug="on">
			<src path="wheel/src" />
			<src path="meta/src" />
		</javac>
		
		<java classname="build.GenerateAntFile">
			<classpath>
				<pathelement location="${build.dir}" />
				<path refid="wheel.lib.classpath" />
			</classpath>
			<arg value="-sourcefolderstogether" />
		</java>
	</target>
	
	<target name="init">
		<mkdir dir="${build.dir}" />
	</target>
	
</project>