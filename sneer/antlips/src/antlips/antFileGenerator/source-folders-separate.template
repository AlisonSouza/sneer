<?xml version="1.0" encoding="UTF-8"?>

<project name="AntBuild" default="test">

	<property name="webstart.dir" location="webstart" />
	<property name="build.dir" location="bin" />
	<property name="clover.jar" location="antlips/lib/clover.jar" />

	<path id="classpath">
<%
	for (final String destDir : value.destDirs()) {
%>		<pathelement path="<%=destDir%>"/>
<%
	}
	
	for (final String lib : value.libs()) {
%>		<pathelement path="<%=lib%>"/>
<%
	}
%>	</path>

	<target name="test" depends="test-execution, test-verification">
	</target>
	
	<target name="test-verification" if="junit.failures">
		<!--fail>Test failures! Check the output for details.</fail-->
		<echo>Test failures! Check the output for details.</echo>
	</target>
		
	<target name="test-execution" depends="compile">
		<junit printsummary="true" failureproperty="junit.failures" fork="yes">
			<sysproperty key="java.awt.headless" value="${java.awt.headless}" />
			<classpath>
				<path refid="classpath" />
				<pathelement location="${clover.jar}" />
			</classpath>
<%
	for (final String destDir : value.destDirs()) {
%>			<batchtest todir="<%=destDir%>">
				<fileset dir="<%=destDir%>">
					<include name="**/tests/*Test.class" />
				</fileset>
				<formatter type="plain"/>
			</batchtest>
<%
	}
%>		</junit>
	</target>

	<target name="compile" depends="copy-resources">
<%
	for (Pair<String, String> src : value.srcs()) {
%>
		<javac srcdir="<%=src._a%>"
				destdir="<%=src._b%>"
				listfiles="true"
				failonerror="true"
				debug="on"
				target="1.5"
				encoding="utf-8">
			<classpath refid="classpath"/>
		</javac>
<%
	}
%>
	</target>

	<target name="copy-resources" depends="init">
<%
	for (Pair<String, String> src : value.srcs()) {
%>
		<copy todir="<%=src._b%>">
			<fileset dir="<%=src._a%>">
				<include name='**/**'/>
				<exclude name='**/*.java'/>
			</fileset>
		</copy>
<%
	}
%>
	</target>
	
	<target name="init">
<%
	for (final String destDir : value.destDirs()) {
%>		<mkdir dir="<%=destDir%>"/>
<%
	}
%>	</target>

	<target name="clean">
<%
	for (final String destDir : value.destDirs()) {
%>		<delete dir="<%=destDir%>"/>
<%
	}
%>	</target>

	<!-- clover support -->
	<target name="init-clover">
		<taskdef resource="cloverlib.xml" classpath="${clover.jar}"/>
		<clover-setup initString="mycoverage.db"/>
	</target>
	
	<target name="clover-report" depends="clean, init-clover, test-execution">
		<fileset dir="." id="clover.sources">
<%
	for (Pair<String, String> src : value.srcs()) {
%>			<include name="<%=src._a%>/**/*.java" />
<%
	}
%>		</fileset>
		
		<clover-report>
	       <current outfile="clover.xml">
	          <format type="xml"/>
	       	  <fileset refid="clover.sources" />
	       </current>
	    </clover-report>
		
		<clover-report>
	       <current outfile="clover">
	          <format type="html"/>
	       	  <fileset refid="clover.sources" />
	       </current>
	    </clover-report>
	</target>

	<target name="makeJavaWebStart" depends="makeJars, makeJnlp">
	</target>

	<target name="makeJars">
		<delete dir="${webstart.dir}/build"/>
		<mkdir dir="${webstart.dir}/build"/>

		<jar destfile="${webstart.dir}/build/sneer.jar">
		    <fileset dir="bin-kernel">
		    	<exclude name='**/*.txt'/>
		    	<exclude name='**/tests/**'/>
		    </fileset>
		    <fileset dir="${build.dir}/build">
		    	<exclude name='**/*.txt'/>
		    	<exclude name='**/tests/**'/>
		    	<exclude name='functional/**'/>
		    	<exclude name='spikes/**'/>
		    	<exclude name='antlips/**'/>
				<exclude name='build/**'/>
		    </fileset>
		</jar>
	</target>

	<target name="signJars" depends="copyJars"><%
for (final String lib : value.libs()) { 
	String fileName = new java.io.File(lib).getName();%>
		<signjar keystore="${webstart.dir}/sneerKeystore" jar="${webstart.dir}/build/<%=fileName%>" alias="bihaiko" storepass="amanda"/><%}%>
		<signjar keystore="${webstart.dir}/sneerKeystore" jar="${webstart.dir}/build/sneer.jar>" alias="bihaiko" storepass="amanda"/>	
	</target>

	<target name="makeJnlp" depends="signJars">
		<echoxml file="${webstart.dir}/build/sneer.jnlp">
			<jnlp spec="1.0+" codebase="file:///${webstart.dir}/build" href="sneer.jnlp">
				<information>
					<title>Sneer!</title>
					<vendor>Sovereign Computing</vendor>
					<description>Sovereign computing is the freedom to share information and hardware resources with your friends, any way you like.:)</description>
					<description kind="short">Sneer is a java-based, free software platform for sovereign applications.</description>
					<homepage href="http://sovereigncomputing.net/"/>
				</information>
				<update check="timeout" policy="always"/>
				<resources>     
					<jar href="sneer.jar"/><% 
for (final String lib : value.libs()) { 
	String fileName = new java.io.File(lib).getName();%>
					<jar href="<%=fileName%>"/><% } %>					
					<j2se version="1.6+" href="http://java.sun.com/products/autodl/j2se"/>
				</resources>
				<security>
					<all-permissions/>
				</security>
				<application-desc main-class="main.MainDemo"/>
			</jnlp>
		</echoxml>
	</target>

	<target name="copyJars"><%
for (final String lib : value.libs()) { %>
		<copy todir="${webstart.dir}/build" file="<%=lib%>"/><% } %>					
	</target>

</project>