package snapps.listentome.speex.tests;

import java.io.StreamCorruptedException;
import java.util.ArrayList;
import java.util.List;

import org.junit.Ignore;
import org.junit.Test;
import org.xiph.speex.SpeexDecoder;

import snapps.listentome.speex.SpeexCodec;
import snapps.listentome.speex.SpeexPacket;
import sneer.kernel.container.Inject;
import sneer.kernel.container.tests.TestThatIsInjected;
import sneer.pulp.clock.Clock;
import sneer.pulp.keymanager.KeyManager;
import sneer.pulp.keymanager.PublicKey;
import sneer.pulp.tuples.TupleSpace;
import sneer.skin.sound.PcmSoundPacket;
import sneer.skin.sound.kernel.impl.AudioUtil;
import wheel.lang.ImmutableByteArray;
import wheel.lang.Omnivore;

public class SpeexCodecTest extends TestThatIsInjected{
	
	@Inject
	private static KeyManager _keyManager;
	@Inject
	private static Clock _clock;
	@Inject
	private static TupleSpace _tupleSpace;

	@SuppressWarnings("unused")
	@Inject
	private static SpeexCodec _subject;

	@Test
	@Ignore
	public void testPcmToSpeex() throws Exception {
		final List<SpeexPacket> seenPackets = new ArrayList<SpeexPacket>();
		_tupleSpace.addSubscription(SpeexPacket.class, new Omnivore<SpeexPacket>() { @Override public void consume(SpeexPacket packet) {
			seenPackets.add(packet);
		}});
		for (byte[] frame : frames()) {
			_tupleSpace.acquire(myPacket(frame));
		}
		assertEquals(1, seenPackets.size());
		assertFrames(seenPackets.get(0));
	}
	
	private void assertFrames(SpeexPacket speexPacket) throws Exception {
		SpeexDecoder decoder = new SpeexDecoder();
		decoder.init(AudioUtil.NARROWBAND_ENCODING, 8000, 1, false);
		int i = 0;
		for (byte[] expected : frames()) {
			final byte[] actual = decodeFrame(decoder, speexPacket._frames[i]);
			assertArrayEquals("frame[" + i + "]", expected, actual);
			++i;
		}
	}

	private byte[] decodeFrame(SpeexDecoder decoder, byte[] frame)
			throws StreamCorruptedException {
		decoder.processData(frame, 0, frame.length);
		int decodedSize = decoder.getProcessedDataByteSize();
		byte[] pcm = new byte[decodedSize]; 
		decoder.getProcessedData(pcm, 0);
		return pcm;
	}
	
	@SuppressWarnings("deprecation")
	private PublicKey contactKey() {
		return _keyManager.generateMickeyMouseKey("contact");
	}

	
	private PcmSoundPacket myPacket(byte[] pcm) {
		return pcmSoundPacketFor(_keyManager.ownPublicKey(), pcm, 1);
	}
//	private PcmSoundPacket contactPacket(byte[] pcm, int sequence) {
//		return pcmSoundPacketFor(contactKey(), pcm, sequence);
//	}
	
	private PcmSoundPacket pcmSoundPacketFor(PublicKey publicKey, final byte[] pcmPayload, int sequence) {
		return new PcmSoundPacket(publicKey, _clock.time(), new ImmutableByteArray(pcmPayload, pcmPayload.length), sequence);
	}
	
	private byte[][] frames() {
		return new byte[][] {new byte[] {
				-36, -2, -36, -2, 24, -1, 24, -1, 52, -1, 
				52, -1, 83, -1, 83, -1, 102, -1, 102, -1, 
				104, -1, 104, -1, 79, -1, 79, -1, 93, -1, 
				93, -1, 125, -1, 125, -1, -79, -1, -79, -1, 
				-45, -1, -45, -1, -37, -1, -37, -1, -17, -1, 
				-17, -1, -18, -1, -18, -1, -31, -1, -31, -1, 
				-29, -1, -29, -1, 0, 0, 0, 0, 36, 0, 
				36, 0, 45, 0, 45, 0, 66, 0, 66, 0, 
				79, 0, 79, 0, 81, 0, 81, 0, 89, 0, 
				89, 0, 102, 0, 102, 0, 110, 0, 110, 0, 
				125, 0, 125, 0, -117, 0, -117, 0, -122, 0, 
				-122, 0, 122, 0, 122, 0, 116, 0, 116, 0, 
				125, 0, 125, 0, -112, 0, -112, 0, -76, 0, 
				-76, 0, -54, 0, -54, 0, -54, 0, -54, 0, 
				-86, 0, -86, 0, -113, 0, -113, 0, 121, 0, 
				121, 0, 93, 0, 93, 0, 59, 0, 59, 0, 
				36, 0, 36, 0, 31, 0, 31, 0, 34, 0, 
				34, 0, 7, 0, 7, 0, 5, 0, 5, 0, 
				-2, -1, -2, -1, 32, 0, 32, 0, 89, 0, 
				89, 0, -118, 0, -118, 0, -96, 0, -96, 0, 
				55, 0, 55, 0, 80, 0, 80, 0, 79, 0, 
				79, 0, 36, 0, 36, 0, 6, 0, 6, 0, 
				-21, -1, -21, -1, -36, -1, -36, -1, -78, -1, 
				-78, -1, -80, -1, -80, -1, -82, -1, -82, -1, 
				-106, -1, -106, -1, -109, -1, -109, -1, -113, -1, 
				-113, -1, 121, -1, 121, -1, 117, -1, 117, -1, 
				60, -1, 60, -1, 41, -1, 41, -1, 31, -1, 
				31, -1, 53, -1, 53, -1, 82, -1, 82, -1, 
				61, -1, 61, -1, 69, -1, 69, -1, 35, -1, 
				35, -1, 20, -1, 20, -1, 52, -1, 52, -1, 
				51, -1, 51, -1, 45, -1, 45, -1, 22, -1, 
				22, -1, 23, -1, 23, -1, 54, -1, 54, -1, 
				
			},
			new byte[] {
				45, -1, 45, -1, 54, -1, 54, -1, 38, -1, 
				38, -1, 37, -1, 37, -1, 60, -1, 60, -1, 
				72, -1, 72, -1, 84, -1, 84, -1, 78, -1, 
				78, -1, 69, -1, 69, -1, 87, -1, 87, -1, 
				111, -1, 111, -1, 123, -1, 123, -1, 114, -1, 
				114, -1, 99, -1, 99, -1, 95, -1, 95, -1, 
				113, -1, 113, -1, -126, -1, -126, -1, -119, -1, 
				-119, -1, -122, -1, -122, -1, -93, -1, -93, -1, 
				-96, -1, -96, -1, 115, -1, 115, -1, 68, -1, 
				68, -1, 74, -1, 74, -1, 113, -1, 113, -1, 
				-108, -1, -108, -1, -60, -1, -60, -1, -20, -1, 
				-20, -1, 14, 0, 14, 0, 22, 0, 22, 0, 
				25, 0, 25, 0, 13, 0, 13, 0, 3, 0, 
				3, 0, -6, -1, -6, -1, 15, 0, 15, 0, 
				6, 0, 6, 0, -65, -1, -65, -1, 19, 0, 
				19, 0, 53, 0, 53, 0, 11, 0, 11, 0, 
				42, 0, 42, 0, 43, 0, 43, 0, 30, 0, 
				30, 0, 21, 0, 21, 0, 41, 0, 41, 0, 
				30, 0, 30, 0, -19, -1, -19, -1, -63, -1, 
				-63, -1, -86, -1, -86, -1, -88, -1, -88, -1, 
				-68, -1, -68, -1, -52, -1, -52, -1, -41, -1, 
				-41, -1, -49, -1, -49, -1, -85, -1, -85, -1, 
				-86, -1, -86, -1, -105, -1, -105, -1, -124, -1, 
				-124, -1, 120, -1, 120, -1, 122, -1, 122, -1, 
				102, -1, 102, -1, 69, -1, 69, -1, 46, -1, 
				46, -1, 26, -1, 26, -1, 14, -1, 14, -1, 
				9, -1, 9, -1, 1, -1, 1, -1, -2, -2, 
				-2, -2, 8, -1, 8, -1, -11, -2, -11, -2, 
				-10, -2, -10, -2, 3, -1, 3, -1, -7, -2, 
				-7, -2, 2, -1, 2, -1, 2, -1, 2, -1, 
				-7, -2, -7, -2, 13, -1, 13, -1, 49, -1, 
				49, -1, 67, -1, 67, -1, 104, -1, 104, -1, 
				
			},
			new byte[] {
				-113, -1, -113, -1, -72, -1, -72, -1, -28, -1, 
				-28, -1, 6, 0, 6, 0, 43, 0, 43, 0, 
				67, 0, 67, 0, 100, 0, 100, 0, -128, 0, 
				-128, 0, -93, 0, -93, 0, -65, 0, -65, 0, 
				-51, 0, -51, 0, -32, 0, -32, 0, -19, 0, 
				-19, 0, -6, 0, -6, 0, 14, 1, 14, 1, 
				30, 1, 30, 1, 69, 1, 69, 1, 103, 1, 
				103, 1, 114, 1, 114, 1, -110, 1, -110, 1, 
				-69, 1, -69, 1, -9, 1, -9, 1, 57, 2, 
				57, 2, -84, 2, -84, 2, -124, 2, -124, 2, 
				84, 2, 84, 2, -113, 2, -113, 2, -122, 2, 
				-122, 2, -104, 2, -104, 2, -100, 2, -100, 2, 
				-114, 2, -114, 2, 113, 2, 113, 2, 64, 2, 
				64, 2, 64, 2, 64, 2, 89, 2, 89, 2, 
				72, 2, 72, 2, 31, 2, 31, 2, -8, 1, 
				-8, 1, -66, 1, -66, 1, -77, 1, -77, 1, 
				127, 1, 127, 1, 104, 1, 104, 1, 61, 1, 
				61, 1, 51, 1, 51, 1, 25, 1, 25, 1, 
				-50, 0, -50, 0, -98, 0, -98, 0, 76, 0, 
				76, 0, 65, 0, 65, 0, 56, 0, 56, 0, 
				39, 0, 39, 0, 5, 0, 5, 0, -16, -1, 
				-16, -1, -43, -1, -43, -1, -32, -1, -32, -1, 
				-83, -1, -83, -1, -120, -1, -120, -1, 81, -1, 
				81, -1, 45, -1, 45, -1, 14, -1, 14, -1, 
				1, -1, 1, -1, 9, -1, 9, -1, -20, -2, 
				-20, -2, -43, -2, -43, -2, -88, -2, -88, -2, 
				-108, -2, -108, -2, -100, -2, -100, -2, -89, -2, 
				-89, -2, -88, -2, -88, -2, -90, -2, -90, -2, 
				-86, -2, -86, -2, -96, -2, -96, -2, -103, -2, 
				-103, -2, -117, -2, -117, -2, -102, -2, -102, -2, 
				126, -2, 126, -2, 103, -2, 103, -2, 100, -2, 
				100, -2, -115, -2, -115, -2, -57, -2, -57, -2, 
				
			},
			new byte[] {
				-22, -2, -22, -2, 3, -1, 3, -1, 4, -1, 
				4, -1, 33, -1, 33, -1, 82, -1, 82, -1, 
				113, -1, 113, -1, 103, -1, 103, -1, 127, -1, 
				127, -1, -113, -1, -113, -1, -65, -1, -65, -1, 
				-60, -1, -60, -1, -69, -1, -69, -1, 47, 0, 
				47, 0, 80, 0, 80, 0, 95, 0, 95, 0, 
				-103, 0, -103, 0, -84, 0, -84, 0, -91, 0, 
				-91, 0, -65, 0, -65, 0, -16, 0, -16, 0, 
				-20, 0, -20, 0, -9, 0, -9, 0, 39, 1, 
				39, 1, 75, 1, 75, 1, 67, 1, 67, 1, 
				68, 1, 68, 1, 75, 1, 75, 1, 102, 1, 
				102, 1, 108, 1, 108, 1, 67, 1, 67, 1, 
				104, 1, 104, 1, -127, 1, -127, 1, 120, 1, 
				120, 1, 117, 1, 117, 1, 112, 1, 112, 1, 
				120, 1, 120, 1, 100, 1, 100, 1, 52, 1, 
				52, 1, -9, 0, -9, 0, -46, 0, -46, 0, 
				-59, 0, -59, 0, -70, 0, -70, 0, -93, 0, 
				-93, 0, 122, 0, 122, 0, 97, 0, 97, 0, 
				57, 0, 57, 0, 12, 0, 12, 0, -28, -1, 
				-28, -1, -60, -1, -60, -1, -72, -1, -72, -1, 
				-84, -1, -84, -1, -103, -1, -103, -1, -127, -1, 
				-127, -1, 116, -1, 116, -1, 103, -1, 103, -1, 
				87, -1, 87, -1, 55, -1, 55, -1, 34, -1, 
				34, -1, 42, -1, 42, -1, 46, -1, 46, -1, 
				52, -1, 52, -1, 42, -1, 42, -1, 33, -1, 
				33, -1, 7, -1, 7, -1, -29, -2, -29, -2, 
				-57, -2, -57, -2, -61, -2, -61, -2, -58, -2, 
				-58, -2, -61, -2, -61, -2, -51, -2, -51, -2, 
				-43, -2, -43, -2, -40, -2, -40, -2, -20, -2, 
				-20, -2, -33, -2, -33, -2, -55, -2, -55, -2, 
				-43, -2, -43, -2, -9, -2, -9, -2, 47, -1, 
				47, -1, -119, -1, -119, -1, -122, -1, -122, -1, 
				
			},
			new byte[] {
				110, -1, 110, -1, -88, -1, -88, -1, -116, -1, 
				-116, -1, -114, -1, -114, -1, -53, -1, -53, -1, 
				-6, -1, -6, -1, 5, 0, 5, 0, 34, 0, 
				34, 0, 115, 0, 115, 0, -90, 0, -90, 0, 
				-50, 0, -50, 0, -26, 0, -26, 0, 9, 1, 
				9, 1, 41, 1, 41, 1, 55, 1, 55, 1, 
				79, 1, 79, 1, -122, 1, -122, 1, -95, 1, 
				-95, 1, -86, 1, -86, 1, -45, 1, -45, 1, 
				-32, 1, -32, 1, 1, 2, 1, 2, -24, 1, 
				-24, 1, -8, 1, -8, 1, 36, 2, 36, 2, 
				25, 2, 25, 2, 5, 2, 5, 2, -24, 1, 
				-24, 1, -16, 1, -16, 1, 30, 2, 30, 2, 
				65, 2, 65, 2, 73, 2, 73, 2, 52, 2, 
				52, 2, -2, 1, -2, 1, -33, 1, -33, 1, 
				-14, 1, -14, 1, -60, 1, -60, 1, -68, 1, 
				-68, 1, -107, 1, -107, 1, 117, 1, 117, 1, 
				105, 1, 105, 1, 101, 1, 101, 1, 88, 1, 
				88, 1, 61, 1, 61, 1, 13, 1, 13, 1, 
				-25, 0, -25, 0, -76, 0, -76, 0, 116, 0, 
				116, 0, 54, 0, 54, 0, -6, -1, -6, -1, 
				-68, -1, -68, -1, 56, -1, 56, -1, 45, -1, 
				45, -1, 28, -1, 28, -1, -2, -2, -2, -2, 
				-19, -2, -19, -2, -78, -2, -78, -2, -121, -2, 
				-121, -2, 89, -2, 89, -2, 48, -2, 48, -2, 
				7, -2, 7, -2, -26, -3, -26, -3, -48, -3, 
				-48, -3, -81, -3, -81, -3, -107, -3, -107, -3, 
				105, -3, 105, -3, 61, -3, 61, -3, 113, -3, 
				113, -3, 121, -3, 121, -3, 106, -3, 106, -3, 
				-102, -3, -102, -3, -91, -3, -91, -3, -89, -3, 
				-89, -3, -73, -3, -73, -3, -51, -3, -51, -3, 
				-73, -3, -73, -3, -80, -3, -80, -3, -42, -3, 
				-42, -3, -24, -3, -24, -3, 3, -2, 3, -2, 
				
			},
			new byte[] {
				32, -2, 32, -2, 67, -2, 67, -2, 126, -2, 
				126, -2, -72, -2, -72, -2, -21, -2, -21, -2, 
				54, -1, 54, -1, 121, -1, 121, -1, -120, -1, 
				-120, -1, -112, -1, -112, -1, -72, -1, -72, -1, 
				-10, -1, -10, -1, 53, 0, 53, 0, 107, 0, 
				107, 0, -118, 0, -118, 0, -102, 0, -102, 0, 
				-77, 0, -77, 0, -37, 0, -37, 0, 13, 1, 
				13, 1, 75, 1, 75, 1, 98, 1, 98, 1, 
				126, 1, 126, 1, -115, 1, -115, 1, -125, 1, 
				-125, 1, -105, 1, -105, 1, -86, 1, -86, 1, 
				-66, 1, -66, 1, -40, 1, -40, 1, -61, 1, 
				-61, 1, -58, 1, -58, 1, -64, 1, -64, 1, 
				-71, 1, -71, 1, -65, 1, -65, 1, -52, 1, 
				-52, 1, -64, 1, -64, 1, -90, 1, -90, 1, 
				-125, 1, -125, 1, 94, 1, 94, 1, 65, 1, 
				65, 1, 1, 1, 1, 1, -19, 0, -19, 0, 
				-52, 0, -52, 0, -69, 0, -69, 0, -80, 0, 
				-80, 0, -100, 0, -100, 0, 115, 0, 115, 0, 
				72, 0, 72, 0, 31, 0, 31, 0, 10, 0, 
				10, 0, -5, -1, -5, -1, -25, -1, -25, -1, 
				-48, -1, -48, -1, -65, -1, -65, -1, -76, -1, 
				-76, -1, -26, -1, -26, -1, -77, -1, -77, -1, 
				107, -1, 107, -1, -124, -1, -124, -1, 68, -1, 
				68, -1, 24, -1, 24, -1, 4, -1, 4, -1, 
				-18, -2, -18, -2, -52, -2, -52, -2, -60, -2, 
				-60, -2, -38, -2, -38, -2, -24, -2, -24, -2, 
				-19, -2, -19, -2, -31, -2, -31, -2, -36, -2, 
				-36, -2, -49, -2, -49, -2, -54, -2, -54, -2, 
				-60, -2, -60, -2, -39, -2, -39, -2, -25, -2, 
				-25, -2, -2, -2, -2, -2, 39, -1, 39, -1, 
				54, -1, 54, -1, 107, -1, 107, -1, 94, -1, 
				94, -1, -125, -1, -125, -1, -88, -1, -88, -1, 
				
			},
			new byte[] {
				-85, -1, -85, -1, -85, -1, -85, -1, -89, -1, 
				-89, -1, -88, -1, -88, -1, -48, -1, -48, -1, 
				-9, -1, -9, -1, 18, 0, 18, 0, 23, 0, 
				23, 0, -15, -1, -15, -1, -2, -1, -2, -1, 
				22, 0, 22, 0, 63, 0, 63, 0, 83, 0, 
				83, 0, 91, 0, 91, 0, 89, 0, 89, 0, 
				96, 0, 96, 0, 122, 0, 122, 0, -126, 0, 
				-126, 0, -126, 0, -126, 0, -98, 0, -98, 0, 
				-67, 0, -67, 0, -59, 0, -59, 0, -32, 0, 
				-32, 0, -50, 0, -50, 0, -44, 0, -44, 0, 
				-86, 0, -86, 0, 126, 0, 126, 0, 84, 0, 
				84, 0, 88, 0, 88, 0, 118, 0, 118, 0, 
				-127, 0, -127, 0, -124, 0, -124, 0, 111, 0, 
				111, 0, 83, 0, 83, 0, 38, 0, 38, 0, 
				0, 0, 0, 0, -29, -1, -29, -1, -41, -1, 
				-41, -1, -52, -1, -52, -1, -60, -1, -60, -1, 
				123, -1, 123, -1, 91, -1, 91, -1, -96, -1, 
				-96, -1, -103, -1, -103, -1, -120, -1, -120, -1, 
				-119, -1, -119, -1, 118, -1, 118, -1, 91, -1, 
				91, -1, 81, -1, 81, -1, 97, -1, 97, -1, 
				63, -1, 63, -1, 36, -1, 36, -1, 19, -1, 
				19, -1, -8, -2, -8, -2, -35, -2, -35, -2, 
				-46, -2, -46, -2, -51, -2, -51, -2, -57, -2, 
				-57, -2, -65, -2, -65, -2, -95, -2, -95, -2, 
				-65, -2, -65, -2, -29, -2, -29, -2, -31, -2, 
				-31, -2, -30, -2, -30, -2, -42, -2, -42, -2, 
				-64, -2, -64, -2, -62, -2, -62, -2, -53, -2, 
				-53, -2, -29, -2, -29, -2, -4, -2, -4, -2, 
				5, -1, 5, -1, 21, -1, 21, -1, 26, -1, 
				26, -1, 38, -1, 38, -1, 47, -1, 47, -1, 
				39, -1, 39, -1, 63, -1, 63, -1, 94, -1, 
				94, -1, 117, -1, 117, -1, -116, -1, -116, -1, 
				
			},
			new byte[] {
				-87, -1, -87, -1, -50, -1, -50, -1, -28, -1, 
				-28, -1, 1, 0, 1, 0, 23, 0, 23, 0, 
				54, 0, 54, 0, 80, 0, 80, 0, 101, 0, 
				101, 0, -128, 0, -128, 0, -90, 0, -90, 0, 
				-57, 0, -57, 0, -46, 0, -46, 0, -25, 0, 
				-25, 0, -21, 0, -21, 0, -16, 0, -16, 0, 
				17, 1, 17, 1, 29, 1, 29, 1, 43, 1, 
				43, 1, 48, 1, 48, 1, 79, 1, 79, 1, 
				86, 1, 86, 1, 81, 1, 81, 1, 60, 1, 
				60, 1, 65, 1, 65, 1, 67, 1, 67, 1, 
				71, 1, 71, 1, 96, 1, 96, 1, 120, 1, 
				120, 1, -64, 1, -64, 1, -128, 1, -128, 1, 
				114, 1, 114, 1, -120, 1, -120, 1, 110, 1, 
				110, 1, 116, 1, 116, 1, 107, 1, 107, 1, 
				64, 1, 64, 1, 21, 1, 21, 1, -12, 0, 
				-12, 0, -39, 0, -39, 0, -74, 0, -74, 0, 
				-85, 0, -85, 0, -95, 0, -95, 0, -125, 0, 
				-125, 0, 80, 0, 80, 0, 36, 0, 36, 0, 
				-14, -1, -14, -1, -35, -1, -35, -1, -78, -1, 
				-78, -1, -86, -1, -86, -1, -110, -1, -110, -1, 
				96, -1, 96, -1, 79, -1, 79, -1, 33, -1, 
				33, -1, 15, -1, 15, -1, 8, -1, 8, -1, 
				-11, -2, -11, -2, -27, -2, -27, -2, -22, -2, 
				-22, -2, -21, -2, -21, -2, -30, -2, -30, -2, 
				-85, -2, -85, -2, 111, -2, 111, -2, 63, -2, 
				63, -2, 30, -2, 30, -2, 25, -2, 25, -2, 
				41, -2, 41, -2, 40, -2, 40, -2, 37, -2, 
				37, -2, 40, -2, 40, -2, 78, -2, 78, -2, 
				93, -2, 93, -2, 99, -2, 99, -2, 119, -2, 
				119, -2, 117, -2, 117, -2, 121, -2, 121, -2, 
				-116, -2, -116, -2, -91, -2, -91, -2, -43, -2, 
				-43, -2, -10, -2, -10, -2, 48, -1, 48, -1, 
				
			},
			new byte[] {
				23, -1, 23, -1, 7, -1, 7, -1, 64, -1, 
				64, -1, 116, -1, 116, -1, -93, -1, -93, -1, 
				-64, -1, -64, -1, -41, -1, -41, -1, -22, -1, 
				-22, -1, 16, 0, 16, 0, 31, 0, 31, 0, 
				75, 0, 75, 0, 93, 0, 93, 0, 109, 0, 
				109, 0, 124, 0, 124, 0, -92, 0, -92, 0, 
				-111, 0, -111, 0, -107, 0, -107, 0, -35, 0, 
				-35, 0, -41, 0, -41, 0, -25, 0, -25, 0, 
				-17, 0, -17, 0, -38, 0, -38, 0, -60, 0, 
				-60, 0, -36, 0, -36, 0, -3, 0, -3, 0, 
				-23, 0, -23, 0, -22, 0, -22, 0, -10, 0, 
				-10, 0, 4, 1, 4, 1, 19, 1, 19, 1, 
				21, 1, 21, 1, 19, 1, 19, 1, 4, 1, 
				4, 1, -24, 0, -24, 0, -52, 0, -52, 0, 
				-32, 0, -32, 0, -49, 0, -49, 0, -82, 0, 
				-82, 0, -85, 0, -85, 0, -87, 0, -87, 0, 
				-107, 0, -107, 0, 112, 0, 112, 0, 91, 0, 
				91, 0, 55, 0, 55, 0, 41, 0, 41, 0, 
				16, 0, 16, 0, -32, -1, -32, -1, -42, -1, 
				-42, -1, -37, -1, -37, -1, -37, -1, -37, -1, 
				-37, -1, -37, -1, -68, -1, -68, -1, -122, -1, 
				-122, -1, 97, -1, 97, -1, 67, -1, 67, -1, 
				48, -1, 48, -1, 8, -1, 8, -1, -10, -2, 
				-10, -2, -43, -2, -43, -2, -67, -2, -67, -2, 
				-70, -2, -70, -2, -63, -2, -63, -2, -61, -2, 
				-61, -2, -62, -2, -62, -2, -79, -2, -79, -2, 
				-89, -2, -89, -2, -91, -2, -91, -2, -66, -2, 
				-66, -2, -26, -2, -26, -2, -35, -2, -35, -2, 
				-41, -2, -41, -2, -65, -2, -65, -2, -61, -2, 
				-61, -2, -41, -2, -41, -2, -19, -2, -19, -2, 
				1, -1, 1, -1, -10, -2, -10, -2, 3, -1, 
				3, -1, 50, -1, 50, -1, 114, -1, 114, -1, 
				
			},
			new byte[] {
				-68, -1, -68, -1, -38, -1, -38, -1, -27, -1, 
				-27, -1, 27, 0, 27, 0, -10, -1, -10, -1, 
				12, 0, 12, 0, 82, 0, 82, 0, 85, 0, 
				85, 0, 101, 0, 101, 0, 116, 0, 116, 0, 
				104, 0, 104, 0, 108, 0, 108, 0, -109, 0, 
				-109, 0, -67, 0, -67, 0, -60, 0, -60, 0, 
				-34, 0, -34, 0, -28, 0, -28, 0, -28, 0, 
				-28, 0, -38, 0, -38, 0, -15, 0, -15, 0, 
				19, 1, 19, 1, 28, 1, 28, 1, 17, 1, 
				17, 1, 41, 1, 41, 1, 71, 1, 71, 1, 
				80, 1, 80, 1, 77, 1, 77, 1, 39, 1, 
				39, 1, 41, 1, 41, 1, 49, 1, 49, 1, 
				24, 1, 24, 1, -11, 0, -11, 0, -26, 0, 
				-26, 0, -46, 0, -46, 0, -50, 0, -50, 0, 
				-87, 0, -87, 0, -125, 0, -125, 0, 87, 0, 
				87, 0, 74, 0, 74, 0, 68, 0, 68, 0, 
				50, 0, 50, 0, -3, -1, -3, -1, -44, -1, 
				-44, -1, -88, -1, -88, -1, -120, -1, -120, -1, 
				115, -1, 115, -1, 97, -1, 97, -1, 70, -1, 
				70, -1, 17, -1, 17, -1, -18, -2, -18, -2, 
				-61, -2, -61, -2, -101, -2, -101, -2, -123, -2, 
				-123, -2, 124, -2, 124, -2, 96, -2, 96, -2, 
				3, -2, 3, -2, -47, -3, -47, -3, -57, -3, 
				-57, -3, -14, -3, -14, -3, -2, -3, -2, -3, 
				-27, -3, -27, -3, -51, -3, -51, -3, -69, -3, 
				-69, -3, -39, -3, -39, -3, -46, -3, -46, -3, 
				-41, -3, -41, -3, -23, -3, -23, -3, -10, -3, 
				-10, -3, 18, -2, 18, -2, 33, -2, 33, -2, 
				32, -2, 32, -2, 37, -2, 37, -2, 92, -2, 
				92, -2, 73, -2, 73, -2, 72, -2, 72, -2, 
				116, -2, 116, -2, -122, -2, -122, -2, -92, -2, 
				-92, -2, -44, -2, -44, -2, -2, -2, -2, -2, 
			}};
	}

}
