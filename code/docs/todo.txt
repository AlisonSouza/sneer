General Direction:
	1) To ENABLE users to develop and share bricks.
	2) To MOTIVATE users to develop bricks by fostering a growing user-base through interesting snapps such as media sharing (Wusic, Movies, etc). Better ideas of cool easy-kill snapps are welcome.

Following are the tasks each one of us has on his plate right now:

Edmundo =================================================

	- Platform exploration
		- Basics:
			- Analyze the project's package structure
				- Note that it's tied to the concepts (freedoms) listed in docs/technical/architecture.txt
			- Observe naming conventions:
				- For packages
					- abstraction.layer.tests
					- abstraction.layer.Type
					- abstraction.layer.Types (factory)
					- abstraction.layer.impl.TypesImpl
					- abstraction.layer.impl.TypesImpl
				- For variables
					- Use _ (underscore) in fields' names (check any brick)
				- For tests: have a look at a test for details
			- Coding conventions:
				- It's always worth remembering: 
					- "Program to an Interface, never to an Implementation" (Design Patterns: Elements of Reusable OO Software)
					- Try to use TDD whenever possible, so there won't be code without coverage
					- Always break down your tasks into commitable baby steps (divide and conquer)
						- Rephrasing: "Avoid leaving uncommited code after a day's work"
					- Programming it's all about good and meaningful names
						- Carefully choose your interfaces', classes', methods' and variables' names
							- Tip: use a thesaurus for finding better names   
		- Study the following core features:
			- Reactive Framework (Signals)
				- Have a look at EventSource's hierarchy (EventSource > Signal > AbstractSignal)
				- Examine the types' implementations in the 'sneer.bricks.pulp.reactive.impl' package, especially 'RegisterImpl'
				- See examples of how to use signals using the factory 'Signals'
				- Run the ReactiveWidgetsDemo
			- Dependency Injection (Environments)
			- Natures

Patrick =================================================

	- ScalaCompilerTest - Permgen issue. Unignore.


Kalecser =================================================

	- LogConsole filters in textfield instead of list.


Bamboo =================================================

	- GUI Nature
		- "Finish Him"


Igor ==================================================== 

	- Add list of friends to ContactInfoWindow
		- Add "Me Too" button to add selected contact's contact as my contact


	- Wusic - MusicalTasteMatcher Buttons
			- First Group: (I want this track. (Today's "Me Too"))
				:D
			- Second Group: (I dont want this particular track...)
				:)    (...but I like it. Bring me similar ones.)
				:|    (...and that's it.)
				:(    (...or any similar tracks.)

	- Chat: instead of using JOptionPanes, extract from Wind a separate "ChatGui" brick, so that Wind and Chat can both use the same Gui.

	- sovereigncomputing.net - Moralize. This is necessary to help promote Wusic.
		- Talk to Klaus 

	- New Contact Stati (Test Driven, of course)
		- Away
			- Presence detection spike based on TimeboxedEventQueue that already intercepts all gui activity. 
		- Busy


René =================================================

	- Toroidal Go Snapp
		- Fix: Sometimes, a stone that was just played does not appear. It only appears when the mouse is moved.
		- Detect and display victory/loss condition
			- Sometimes it does not appear after I click resign.
			- When it does appear, it cannot be seen over black stones.
		- Light Reflections on the stones (The larger reflection ellipse should be rotated a bit counter-clockwise to be correct)
			- The reflections were a good idea :) but I find them distracting, polluting. Please remove them. Just draw a perfect anti-aliased black or white disc. I find that more elegant.
		- Stone circle Anti-alias 
			- Black stones still have strong aliasing on 19x19. Can anti-aliasing improve?


Klaus =================================================

	- InternetAddresses thread leak - Fix
		- Simplify connection
	
	- Prevalence loading impls in API classloader during tests - Fix
		- Uncomment in BrickTestRunner the following line (around line 100):  //  if (name.indexOf(".impl.")...
		- FileMapData - make static again
	
	- GUI Nature
		- [Klaus] Announce to community
	
	- OwnKeysImpl - Debug with leo and remove logging

	- Prevalence
		- ContactSeals.void put(String contactNickname, Seal seal) throws Refusal; -> PickyConsumer<Seal> sealPutterFor(Contact contact) throws Refusal;
			- Change MusicalTasteMatcher's interface to use the contact instead of the nickname (string)
		- [Igor] BrickStateStore: retire. Use the prevalent nature instead.
		- Announce to community
			- Document

	- Wusic - MusicalTasteMatcher
		- Business Logic
			- FunctionalTest not necessary. Unit test is enough because there is no remoteness going on and only a single brick is involved in the logic.

	- Revise entire package structure.
		- Remove all calls to Thread.sleep() including indirect.

	- Freedom7 - "Me Too" for Bricks 
		- Unignore Freedom7.meToo (passes if FileMap is not prevalent :P)
			- BrickSpaceImpl:
				- Uncomment line  //if (!isMyOwn(srcFolderHash))
				- remove synchronized from fetchIfNecessary
			
			
		- Brick States - All
			- Hierarchical View - Consider groups of bricks (brick package at any level, examples: bricks.hardware, bricks.software, bricks.hardware.io, etc) as an optional grouping for versioning and downloading from friends, not only individual bricks.
				- Do not allow circular dependencies among any level of groups of bricks and voila: the world is free of cyclic dependencies.
