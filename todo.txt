MAIN ROADMAP
===================

	- [Sandro] ContactManager.getContacts - Delete this method. It should never have been exposed.
	- [Sandro] @Override SnappFrameImpl.getContainer causes a compile error in OpenJdk6 because getContainer is implemented in Component as packagelocal. :)
	- Dashboard - Make it open by default when Sneer is run.
	- Contacts List - Leave the "My Contacts" label. Remove the ugly border. :)
	- SneerFreedom7Test - Test brick publishing with a lib.
	---- INITIAL CLEANUP DONE

	- Brick Publish (Supposedly working already)
		- MainDemo - Publish all necessary bricks instead of just producing them.
	- Contact List - (Host addresses for Sneer developers are HARDCODED)
		- Name
		- Online indicator icon
	---------------------------------- FIRST DOGFOOD RELEASE - Anelise can start testing for real. All bugs she finds get fixed immediately. Improvement suggestions are added to this todo list.

	- [Petra] Tray and Dashboard Titlebar Icon

	- [Kalecser] Continuous Integration with Clover test coverage
		- Low maintenance build: Interpret the .classpath file and compile the build exactly as Eclipse would.
		- Cyclic dependency detection: Compile one sourcefolder at a time, from the last in the .classpath list (most basic (wheel)) to the first in the list (most high-level (spikes)), without the other uncompiled sourcefolders in the path.
	
	- Wind
	---- WE DROP SKYPE CHAT :)
	
	- DynDNS Client ;)	
	- Voice Calls - Migrate from the old sneermonolith project
	---- WE DROP SKYPE :)

	- Open Jar leak - Fix in Freedom7Test
	- Replace the AnnotatedFieldInjector by the StaticFieldInjector - Need to create our own TestRunner?
	- ContainerUtils.getContainer() - Drop. Fix all uses.
	- Output folders - Make all source folders compile to the default folder (bin) and fix the tests. Is this possible?
	- Simplest Possible Kernel - What is it? Just injection?
		- Simplify the container because of the removal of the Enhancer (MakeSerializable is a Spike now).
		- ASM - Move asm*.jar to a brick lib
			- Remove kernel dependency. Make it pluggable in the kernel.
	- Move or delete stuff we have not yet covered in the roadmap
		- [done] Example: Delete GiveNTake
	- Revise entire project structure
		- Sneer
			- Installer
			- Wheel (+ Commons)
			- Boot (+ KernelJockey)
			- Kernel
			- Pulp (Bricks)
			- Skin (Bricks)
		- Snapps (Bricks)
			- ...
	- Refactor AbstractSwingMenu.addAction and the SelectableAction hierarchy. Too many casts. 
	- Revise SneerFreedom*Test classes. They are all the same
	- Logging - Revise all uses of logging, out and err.
	- Exception Handling - Revise and correct
	- Fix and remove all task comments in the code except for Optimize (Fix Urgent, Fix, Refactor and Implement).
	---------------------------------- "NO BROKEN WINDOWS" status achieved. From now on code is ALWAYS kept 99.999% clean. 
	
	- Blinking lights
		- API
		- GUI
	- Transparent Persistence
	- Screen Viewing à la VNC - There is a free vnc client implementation in Java. If there is no free server implementation in java, just send the entire screen over using gzip compression for now.
	---- WE DROP VNC
	
    - File Transfer
	- Traffic Prioritization by tuple type
	- MSN Client
		- Contact Unification
	- Messaging - Grand unification of instant messages and email
		- Instant Messaging
		- Offline Messaging (equivalent to "email")
		- Group Messages
		- History
	- Wind History
    - File Sharing
    	- Public Files
	- Brick
		- Uninstall
		- Update
	- Kernel Update
		- Auto Update
		- KernelJockey - Cannot run new version if threads are still left over from previous run.
	- Contact CRUD
		- Nicknames
	- MeToo
	- Security
		- Sandboxing
	- Responsive threading model for snapps. Snapps can NEVER block the Swing gui thread. Maybe have one event dispatch thread per Snapp. Snapps still have to comply with invokeLater/invokeAndWait to modify gui from other threads or live with the consequences. Test to see if they can ruin/interfere with the entire Sneer gui even having acess to their own components. 
	- Affinity
		- Access control to all other snapps by affinity.
	- Authentication (PK)
	- Issue Tracking
	- Revise project structure - sourcefolders, package names, build.xml, etc
	---------------------------------- DEVELOPER COMMUNITY BETA RELEASE
	
	- Public Forums
	- TopTen
	- Annotations/Comments/Tags
	- Synonyms
	- Avatars
		- Show in Contact List
		- Show in chat frame
		- Choose Image
		- Define Keyhole
		- Contacts' Avatars
			- View Keyholes in Contact List
			- View Full Avatar 
	- Profile - City, Birthday, etc (?)
	- Dashboard
		- Drag n Drop for reordering Snapps
	- Installer.EXE for Windows
	---------------------------------- PUBLIC RELEASE (1.0)

	- OMetaBoo support
	- Auto Update for Bricks
	- Thumbnails in Pic Chooser
	- GiveNTake
	- Media
		- MP3 Player
		- Vídeo Player
		- TopTen Integration
		- Voice/Video Recording
		- Cam
	- Secure Channel-Crypto
	- Persistence-Crypto
	- Simple CPU Sharing
	- Multiple Look-N-Feels
		- Napkin Default Look-N-Feel
	---------------------------------- MAJOR PUBLIC RELEASE (2.0)
	
	- Drop XStream? - Consider using asm to inject "implements Serializable" in all bricks instead of using xstream
		- Measure Performance gain, if any
	- Native Bricks (JNI)
		    - Require JNI (Full-Trust) Security Clearance, even for verification. Warn user.
	- Own Photo - Crop
	---------------------------------- NEAR FUTURE - Everything below here is brainstorming for a more distant future
	
	- Anonimizing
	- Brick Development Tools
		- Code Repository Integration
		- Continuous Build
			- Unit Test Execution
				- Bug Tracking Integration
			- Dependency resolution
		- Peer Grid (CPU Sharing)
		- Eclipse Integration
		  - Namespace Economy - Consider loosening TCOB1
	- Allow for "backward-compatible" interfaces with the same name
	- Allow same name from different authors
		- Author will ALWAYS use "me" as package root name. Ex: me.util.logging
			- On deployment will be replaced by the author's nickname path or id or something. Ex: fred.sister.util.logging
	- Quarantine - Option to run (only native?) components in a separate VM process to avoid crashing the system (Ex: GPF).
 	- Automated tests as part of interface spec
		- Mock Components
		- Unit Tests
			- Set of public java classes. For Each class:
				- Package name is the subject interface package appended with ".tests". Ex: me.util.logging.tests
				- Class name is the subject interface name appended with "Test". Ex: LogTest
				- Single public constructor
					- Single parameter: the instance to be tested (implements subject interface).
				- Can be used to test ALL implementations of the subject interface.


[END OF OFFICIAL TODO LIST]




OLD STUFF
=================

		- SnappPreview
			- Change size
			- Menu
				- open window
				- uninstall
				- About
				- Others (Snapp specific)
			- Sizes:
				- Single Line - Signal<String> title(). Future: space available for graphics.
				- MultiLine - Signal<int> preferredHeight() Component component(). Future: forced size by user.
				- Iconified - space available for graphics
		- SnappWindow
	- Animated collapse for SnappPreviews

	=================================================== RELEASE
	- Resizeable JWindow, instead of switching JFrame <-> JWindow.
	- Add Tab/Window Support

Container
	- replace AnnotatedFieldInjector with StaticFieldInjector which will enable removing the use of @Inject and Startable 
	- include author's pk into brick hashcode
	- use brick hashcode as key on BrickManager 
		- hash com libs
	[Almost DONE] - Brick Publish:
		1) Inform source folder (src).
		2) Inform library folder (lib).
		3) Find all interfaces that extend Brick inside src.
		4) compile the bricks using the metadatafile (describes only RELATIVE paths to libs inside lib folder) and all jars inside all subfolders of the bricks' local lib folder.
		5) Run SNEER1024 hash (SHA-512 concat Whirlpool-512) on interface .class files (or jar).
		6) Run SNEER1024 hash on impl .class files (or jar) together with libs (produce a single impl hash for it all).
		7) Inform status:
			- New brick.
			- Unchanged brick.
			- Impl changed (impl hash of brick changed)
			- Evolved brick (main interface extends main interface of old brick)
			- Invalid brick (Interface hash of brick changed)
				Deploy is not allowed in this case.
		8) deploy brick to sneer home ($USER_HOME/.sneer/)
	- Logging - Find a way that the Looger brick can configured via API without having to use the log4j properties file. 
	=================================================== RELEASE
	

Klaus
	contacts() - change from ListSignal to SetSignal.
	- Package namespace - revise sneer.lego? sneer.kernel? sneer.bricks? - Consider using kernel, pulp and skin.
	- Make build.xml run again. 
	- README.txt - Update sourcepath, classpath, main class and build.xml references
	=================================================== RELEASE
	- KeyManager <-> Mesh dependency cycle - Eliminate.
	- "Interface.allImplementors()" - Simplify use by injecting a SetSignal with all Bricks that implement a non-brick interface defined by another brick.  
	- UDP instead of TCP

Gandhi
	partially done (windows&konqueror not nautilus) - Public Files of Contact - Copy and Paste
	- Check file transfer between LINUX and WINDOWS. (Using Metoo, shared folders, public files).
	- Public Files of Contact - Drag and Drop
	- Persist SplitPane position (maybe with bounds)


FileSharing
	- Hardcoded directory
	- Polling
	- New file
	- Set same modified date
	- Atomic transfers always (file rename)
	- Chunked transfers.
	- File deletion detected (recover from remote)
	- Changed file (based on date)
	- File deletion requested by user (delete on both sides)
	- subdirectories
	- Limitação de uso de banda hardcoded
	- Smaller files first
	- Conflict detection
	- access control
	- File hashes to detect changes and renames
	- diff
  
 
TopTen


GiveNTake
	- "Things"
		- Publisher/Announcer/Author - The sovereign party responsible for this thing.
		- Name - For listing. Considered part of the description when searching, maybe with a higher weighting.
		- Description - Free text.
		- Attributes? Price, Weight, etc?
			- Location? Street Addresses? GPS Coordinates?
		- Photos? Other Media?
		- Comments by others?

	- Examples
	- Apartment
		- Name: "Av João Gualberto 1673 sala 41" or "Apartamento Juvevê 2 Quartos"
		- Description: "Apartamento Sala Comercial em Bom estado. Bom para consultorio. Face sul. Sito a Av João Gualberto 1673 sala 41. R$42700,00 a vista. Aceita troca por carro de menor valor."

		- Name: "Apartamento Residencial - Bacacheri"
		- Description: "Valor: R$ 194.500,00 Area: 163,00m², mobilado, ocupado, com playground, BELÍSSIMO APTO CONTENDO 3 QUARTOS SENDO 1 SUITE COM ARMÁRIOS E PISO EM MADEIRA, AMPLA SALA EM (L) TAMBEM COM PISO EM MADEIRA, SANCAS DE GESSO, PINTURA TEXTURIZADA, QUARTOS DE SOLTEIRO COM ARMÁRIOS,ESQUADRIS DE ALUMINIO, COZINHA COM ARMÁRIOS E AQUECIMENTO Á GÁS, PREDIO COM 02 SALÕES DE FESTAS, 02 CHURRASQUEIRAS COLETIVAS, SALÃO DE JOGOS E SALA DE GINASTICA, ARQUITETURA MODERNA E PASTILHADA. PRÓXIMO AO WALL MART DO CABRAL, BANCOS ESCOLAS FARMÁCIAS E COMERCIO EM GERAL. ESTUDO PROPOSTA COM IMÓVEL DE MAIOR VALOR EM CONDOMINIO FECHADO. CONFIRA E FAÇA SUA PROPOSTA"
  
		- Name: "Apartamento Residencial - Barreirinha"
		- Description: "Valor: R$ 66.000,00 Area: 50,00m² Apartamento no Cond. Sta. Efigênia II, 3º andar, 02 quartos, sala, cozinha, área serviço e bwc, piso taco, próximo ao Terminal Barreirinha, com ônibus, escola, Posto de Saúde. Rua Professor Guilherme Butler"

		- Name: "Casa Residencial - Atuba"
		- Description: "Valor: R$ 130.000,00 Area: 120,00m² Casa com 3 quartos sala cozinha banheiro com piso em parquet, janelas de ferro com grade toda murada e com grade na frente, quintal com deposito em alvenaria, cozinha com armarios."
      
	- Search:
		API for agent with predicate to decide?

		(Apartamento | Apto | Ap) => Apartamento
		(Casa | Sobrado) => Casa
		(Barreirinha | Ahu | Juveve | AltoDaGloria) -> Bairros Legais
		(Apartamento | Casa), Bairros Legais, -Comercial, Churrasqueira -> Imoveis Legais
      
		Imoveis Legais, Price < 100000
		Imoveis Legais, 100000 <= Price < 200000
		Imoveis Legais, 200000 <= Price < 300000
      
		- Ignored (em, bom, para, m², com)
      
	- shown tags
		- 4x Valor
        - 3x Cozinha
        - 3x área
        - 3x Residencial
        - 3x quartos
        - 3x Valor R$
        - 2x 3 quartos
        - 2x comercial
        - 2x churrasqueira


