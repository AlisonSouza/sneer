Leandro
 [DONE] - In-process network - implement
 [DONE/in memory]- InternetAddressKeeper - implement
 [DONE/in memory] - KeyManager - implement
 [STARTED] - Exception Handler - Rename to "BlinkingLights". API must be something like turnOn("Message") returns Light, Light.turnOff(). Not just like a "logger" API.
 - Brick Directory Structure - Simplify. Discuss with Klaus. Move each brick to its own structure.
 - Proactivity - Pick something from KTlaus's todo list.

Klaus
ongoing - Component Model (see todoLego.txt)
 - Freedom2Test - Make it pass with new bricks.
 - SocketAccepter.lastAcceptedSocket() - Refactor to void acceptedSocketServer(Omnivore<ByteArraySocket>). There will only be one instead of many receivers. Simplifies the impl of SocketAccepter. 
 - Public Keys
 - Brick persistence
 - Auto-update of Kernel from Peers
 - Publish, Download, Auto-Update of Bricks from Peers
 - GUI - Spartan interface for what we have so far. http://c2.com/cgi/wiki?SpartanUserInterface 
 - Logging - revise how logging is done by all bricks
 - Make build.xml run again. 
 - README.txt - Update sourcepath, classpath, main class and build.xml references
RELEASE BETA===================================================
 - Contact Navigation
 - Connection Encryption
 - UDP instead of TCP

Gandhi
done - Make build class for Sneer
done - My Public Files Folder - Any contact can do "Save As" on the other side.
partially done (windows&konqueror not nautilus) - Public Files of Contact - Copy and Paste
 - Check file transfer between LINUX and WINDOWS. (Using Metoo, shared folders, public files).
 - Public Files of Contact - Drag and Drop
 - Persist SplitPane position (maybe with bounds)
 - Set up a gandhi.selfip.net so you are always reachable wherever you are. Tell the people on the sneercoders list.


FileSharing
  - Hardcoded directory
  - Polling
  - New file
  - Set same modified date
  - Atomic transfers always (file rename)
  - Chunked transfers.
  - File deletion detected (recover from remote)
  - Changed file (based on date)
  - File deletion requested by user (delete on both sides)
  - subdirectories
  - Limitação de uso de banda hardcoded
  - Smaller files first
  - Conflict detection
  - access control
  - File hashes to detect changes and renames
  - diff