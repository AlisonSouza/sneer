<?xml version="1.0" encoding="UTF-8"?>

<project name="sneer" default="test">

	<property name="build.dir" location="build" />
	<property name="dist.dir" location="build/dist" />
	<property name="bin.dir" location="build/bin" />
	
	<property name="clover.jar" location="lib/clover.jar" />

	<property name="sneer.home" location="../code" />
	<property name="sneer.src" location="../code/src" />
	<property name="sneer.bin" location="../code/bin" />

	<path id="classpath">
		<pathelement path="${bin.dir}"/>
		<fileset dir="${sneer.src}">
			<include name='**/*.jar' />
		</fileset>
		<fileset dir="lib">
			<include name='**/*.jar' />
		</fileset>
	</path>

	<path id="test-classpath">
		<pathelement path="${bin.dir}"/>
		<fileset dir="${sneer.src}">
			<include name='sneer/foundation/languagesupport/**/*.jar' />
			<include name='sneer/foundation/testsupport/**/*.jar' />
			<include name='sneer/bricks/hardware/cpu/crypto/impl/lib/bcprov-jdk16-139.jar' />
		</fileset>
		<fileset dir="lib">
			<include name='**/*.jar' />
		</fileset>
	</path>

	<taskdef resource="scala/tools/ant/antlib.xml">
		<classpath>
	        <pathelement location="${sneer.src}/sneer/bricks/software/code/compilers/scala/impl/lib/scala-compiler.jar"   />
	        <pathelement location="${sneer.src}/sneer/foundation/languagesupport/scala/lib/scala-library.jar"   />
		</classpath>
	</taskdef>


	<target name="test" depends="makejar, test-execution, test-verification, test-cleanup">
		<antcall target="finalize"/>
	</target>

	<target name="findDuplicateCode">
		<path id="pmd.lib">
			<fileset dir="lib/pmd">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${sneer.src}">
				<include name="**/*.jar" />
			</fileset>
		</path>

		<taskdef name="cpd" classname="net.sourceforge.pmd.cpd.CPDTask">
			<classpath refid="pmd.lib" />
		</taskdef>

		<property name="fdc.src" location="../src"/>
		<property name="output" location="build/duplicate.xml"/>
		
		<echo message="${fdc.src} --> ${output}"/>
		
		<cpd minimumTokenCount="50" format="xml" ignoreLiterals="true" ignoreIdentifiers="true" outputfile="${output}">
			<fileset dir="${fdc.src}">
				<include name="**/*.java"/>
			</fileset>
		</cpd>
	</target>

	<target name="clover" depends="init-clover, compile, test-execution, test-verification, report-clover">
		<antcall target="finalize"/>
	</target>


	<target name="finalize">
		<mkdir dir="${build.dir}/tests"/>
		<move todir="${build.dir}/tests">
			<fileset dir="${bin.dir}">
				<include name='TEST-*.txt' />
				<include name='TEST-*.xml' />
			</fileset>
		</move>
	</target>

	<target name="test-cleanup">
		<delete dir="${java.io.tmpdir}/cleantest" deleteonexit="true" quiet="true" verbose="true" />
	</target>

	<target name="test-verification" if="junit.failures">
		<echo>Test failures! Check the output for details.</echo>
	</target>

	<target name="test-execution" depends="copy-src-for-tests">
		<junit printsummary="true" failureproperty="junit.failures" fork="yes" timeout="60000">
			<jvmarg value="-XX:MaxPermSize=512m"/>
			<jvmarg value="-Xms32m"/>
			<jvmarg value="-Xmx512m"/>
			<formatter type="xml"/>
			<sysproperty key="java.awt.headless" value="${java.awt.headless}" />
			<classpath>
				<path refid="test-classpath" />
				<pathelement location="${clover.jar}" />
			</classpath>
			<batchtest todir="${bin.dir}">
				<fileset dir="${bin.dir}">
					<include name="**/*Test.class" />
					<exclude name="**/BrickTest.class" />
				</fileset>
				<formatter type="plain"/>
			</batchtest>
		</junit>
	</target>


	<target name="compile" depends="clean, copy-resources">
		<javac srcdir="${sneer.src}" destdir="${bin.dir}" listfiles="true"
			   failonerror="true" debug="on" target="1.6" encoding="utf-8">
			<classpath refid="classpath"/>
		</javac>
	    <scalac srcdir="${sneer.src}"
	            destdir="${bin.dir}"
	            classpathref="classpath">
	    	<include name="**/*.scala"   />
	    </scalac>
	</target>

	<target name="makejar" depends="compile, copy-bin">
		<delete file="${dist.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<jar destfile="${dist.dir}/sneer.jar">
			<fileset dir="${sneer.home}">
				<include name='**/*.*' />
				<exclude name='**/TEST-*.txt' />
				<exclude name='**/TEST-*.xml' />
			</fileset>
		</jar>
	</target>

	<target name="copy-bin">
		<reset-dir dir="${sneer.bin}"/>
		<copy todir="${sneer.bin}">
			<fileset dir="${bin.dir}">
				<include name='**/*.*'/>
			</fileset>
		</copy>
	</target>

	<target name="copy-resources">
		<copy todir="${bin.dir}">
			<fileset dir="${sneer.src}">
				<include name='**/**'/>
				<exclude name='**/*.java'/>
			</fileset>
		</copy>
	</target>
	
	<target name="copy-src-for-tests">
		<mkdir dir="${bin.dir}/../src"/>
		<copy todir="${bin.dir}/../src">
			<fileset dir="${sneer.src}">
				<include name='**/**'/>
			</fileset>
		</copy>
	</target>


	<target name="clean">
		<delete dir="${build.dir}"/>
		<mkdir dir="${bin.dir}"/>
	</target>

	<target name="init-clover">
		<mkdir dir="${build.dir}/clover/bin"/>
		<taskdef resource="cloverlib.xml" classpath="${clover.jar}"/>
		<clover-setup initString="${build.dir}/clover/bin/mycoverage.db"/>
	</target>

	<target name="report-clover">
		<fileset dir="../src" id="clover.sources">
			<include name="**/*.java" />
		</fileset>

		<clover-report>
			<current outfile="${build.dir}/clover/clover.xml">
				<format type="xml"/>
				<fileset refid="clover.sources" />
			</current>
		</clover-report>

		<clover-report>
			<current outfile="${build.dir}/clover/html">
				<format type="html"/>
				<fileset refid="clover.sources" />
			</current>
		</clover-report>
	</target>
	
	<macrodef name="reset-dir">
		<attribute name="dir" />
		<sequential>
			<delete dir="@{dir}" />
			<mkdir dir="@{dir}" />
		</sequential>
	</macrodef>

</project>